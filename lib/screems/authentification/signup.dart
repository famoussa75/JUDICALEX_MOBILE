import 'dart:convert';
import 'dart:io'; // Pour File
import 'dart:ui';
import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:http/http.dart' as http;
import 'package:http_parser/http_parser.dart';
import 'package:image_picker/image_picker.dart';
import 'package:logger/logger.dart';
import 'package:mailer/mailer.dart';
import 'package:mailer/smtp_server/gmail.dart';
import 'package:provider/provider.dart';
import 'package:url_launcher/url_launcher.dart';

import '../../db/base_sqlite.dart';
import '../../widget/user_provider.dart';
import 'login.dart';

class SignupPage extends StatefulWidget {
  const SignupPage({super.key});
  @override
  SignupPageState createState() => SignupPageState();
}

class SignupPageState extends State<SignupPage> {
  final DatabaseHelper dbHelper = DatabaseHelper();
  final _formKey = GlobalKey<FormState>();
  final TextEditingController _prenomController = TextEditingController();
  final TextEditingController _nomController = TextEditingController();
  final TextEditingController _usernameController = TextEditingController();
  final TextEditingController _emailController = TextEditingController();
  final TextEditingController _passwordController = TextEditingController();
  final TextEditingController _confirmpassord = TextEditingController();
  File? _photo;
  bool _isLoading = false; // Indicateur de chargement
  bool noteVisible = true;

  bool showLoginForm = true; // üëà par d√©faut on affiche connexion

  bool _isAccepted = false;

  @override
  Widget build(BuildContext context) {

    return Scaffold(
      backgroundColor: Colors.white,
      body: Center(
        child: Padding(
          padding: const EdgeInsets.all(16.0),
          child: Form(
            key: _formKey,
            child: ListView(
              children: [
                Center(
                  child: Column(
                    mainAxisAlignment: MainAxisAlignment.start, // Centre les √©l√©ments verticalement
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      Center(
                        child: Column(
                          mainAxisAlignment: MainAxisAlignment.center, // Centre les √©l√©ments verticalement
                          crossAxisAlignment: CrossAxisAlignment.center,
                          children: [
                            Image.asset(
                              'images/logojudicalex(1).png',
                              width: 200,
                              height: 40,
                              fit: BoxFit.cover,
                            ),
                            const SizedBox(height: 30),
                            const Text(
                              "INSCRIPTION",
                              style: TextStyle(
                                fontSize: 32,
                                fontWeight: FontWeight.w700,
                                fontStyle: FontStyle.normal,
                                height: 1.0,
                                color: Colors.black,
                              ),
                            ),
                          ],
                        ),
                      ),
                      Container(
                        padding: const EdgeInsets.all(12),
                        width: double.infinity,
                        child: const Text(
                          "Acc√©dez √† votre espace personnel pour suivre vos d√©marches, "
                              "enregistrer vos requ√™tes et profiter pleinement des services juridiques.",
                          textAlign: TextAlign.start,
                          style: TextStyle(fontSize: 14, color: Colors.black87, height: 1.4),
                        ),
                      ),
                        const SizedBox(height: 20),
                      Container(
                        margin: const EdgeInsets.symmetric(horizontal: 20),
                        padding: const EdgeInsets.all(1),
                        decoration: BoxDecoration(
                          color: Colors.grey[200],
                          borderRadius: BorderRadius.circular(8),
                        ),
                        child: Row(
                          children: [
                            Expanded(
                              child: ElevatedButton(
                                style: ElevatedButton.styleFrom(
                                  backgroundColor: !showLoginForm ? Colors.white : Colors.grey[200],
                                  foregroundColor: !showLoginForm ? Colors.white : Colors.black,
                                  shape: RoundedRectangleBorder(
                                    borderRadius: BorderRadius.circular(8),
                                  ),
                                ),
                                onPressed: () {
                                  Navigator.pushNamed(context, "/login");
                                  setState(() {
                                    showLoginForm = false; // affiche login
                                  });
                                },
                                child: const Text("Se connecter"),
                              ),
                            ),
                            const SizedBox(width: 12),
                            Expanded(
                              child: ElevatedButton(
                                style: ElevatedButton.styleFrom(
                                  backgroundColor: showLoginForm ? Colors.white : Colors.grey[200],
                                  foregroundColor: showLoginForm ? const Color(0xFFDFB23D) : Colors.grey[200],
                                  shape: RoundedRectangleBorder(
                                    borderRadius: BorderRadius.circular(8),
                                  ),
                                ),
                                onPressed: () {
                                  setState(() {
                                    showLoginForm = true; // affiche inscription
                                  });
                                },
                                child: const Text("S'inscrire"),
                              ),
                            ),
                          ],
                        ),
                      ),

                    ],
                  ),
                ),

                // Champ Pr√©nom
                _buildTextField(
                  controller: _prenomController,
                  label: "Pr√©nom",

                  validator: (value) => value!.isEmpty ? "Champ requis" : null,

                ),

                // Champ Nom
                _buildTextField(
                  controller: _nomController,
                  label: "Nom",
                  validator: (value) => value!.isEmpty ? "Champ requis" : null,

                ),

                // Champ Nom d'utilisateur
                _buildTextField(
                  controller: _usernameController,
                  label: "Nom d'utilisateur",
                  validator: (value) => value!.isEmpty ? "Champ requis" : null,

                ),

                // Champ Email
                _buildTextField(
                  controller: _emailController,
                  label: "Email",
                  validator: (value) => value!.isEmpty ? "Champ requis" : null,

                ),

                // Champ Mot de passe
                _buildTextField(
                  controller: _passwordController,
                  label: "Mot de passe",
                  obscureText: noteVisible,
                  suffixIcon: IconButton(
                    icon: Icon(noteVisible ? Icons.visibility_off : Icons.visibility),
                    onPressed: () => setState(() => noteVisible = !noteVisible),
                  ),
                  validator: validatePassword, // Int√©gration de la validation

                ),
                // Champ Confirmer le mot de passe
                _buildTextField(
                  controller: _confirmpassord,
                  label: "Confirmer le mot de passe",
                  obscureText: noteVisible,
                  validator: (value) {
                    if (value!.isEmpty) return "Champ requis";
                    if (value != _passwordController.text) return "Les mots de passe ne correspondent pas";
                    return null;
                  },
                ),
                const SizedBox(height: 10),

                // Bouton pour s√©lectionner une photo
                Padding(
                  padding: const EdgeInsets.symmetric(vertical: 8.0),
                  child: ElevatedButton(
                    onPressed: _pickImage,
                    style: ElevatedButton.styleFrom(
                      backgroundColor: const Color(0xFFDFB23D) , // Couleur de fond du bouton
                      padding: const EdgeInsets.symmetric(vertical: 13.0, horizontal: 18.0), // Padding interne
                      shape: RoundedRectangleBorder(
                        borderRadius: BorderRadius.circular(12.0), // Coins arrondis
                      ),
                    ),
                    child: const Row(
                      mainAxisSize: MainAxisSize.min, // Ajuste la taille du bouton √† son contenu
                      children: [
                        Icon(Icons.photo, size: 20,color: Colors.white,), // Ic√¥ne pour indiquer l'action
                        SizedBox(width: 10), // Espace entre l'ic√¥ne et le texte
                        Text(
                          "S√©lectionner une photo",
                          style: TextStyle(fontSize: 16,color: Colors.white), // Taille de la police
                        ),
                      ],
                    ),
                  ),
                ),

                FormField<bool>(
                  initialValue: _isAccepted,
                  validator: (value) {
                    if (value != true) {
                      return "Vous devez accepter les conditions d‚Äôutilisation";
                    }
                    return null;
                  },
                  builder: (formFieldState) {
                    return Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        Row(
                          children: [
                            Checkbox(
                              value: formFieldState.value ?? false,
                              onChanged: (value) {
                                setState(() {
                                  _isAccepted = value ?? false;
                                  formFieldState.didChange(value);
                                });
                              },
                            ),
                            Flexible(
                              fit: FlexFit.loose,
                              child: GestureDetector(
                                onTap: () {
                                  setState(() {
                                    _isAccepted = !_isAccepted;
                                    formFieldState.didChange(_isAccepted);
                                  });
                                  showDialog(
                                    context: context,
                                    builder: (context) => _conditionsUtilisation(),
                                  );
                                },
                                child: RichText(
                                  text: const TextSpan(
                                    style: TextStyle(
                                      fontSize: 14,
                                      color: Colors.black, // Couleur normale pour le texte
                                      fontWeight: FontWeight.w500,
                                    ),
                                    children: [
                                      TextSpan(text: "J'accepte les "),
                                      TextSpan(
                                        text: "conditions d'utilisation",
                                        style: TextStyle(
                                          color: Colors.blue,
                                        ),
                                      ),
                                    ],
                                  ),
                                ),
                              ),
                            ),
                            Container(
                              margin: const EdgeInsets.symmetric(horizontal: 4), // ‚Üê Espacement r√©duit
                              child: const Text(
                                "et",
                                style: TextStyle(
                                  fontSize: 12,
                                  color: Colors.black,
                                  fontWeight: FontWeight.w500,
                                ),
                              ),
                            ),
                            Flexible( // ‚Üê Chang√© de Expanded √† Flexible
                              fit: FlexFit.loose, // ‚Üê Permet au texte de prendre seulement l'espace n√©cessaire
                              child: GestureDetector(
                                onTap: () {
                                  showDialog(
                                    context: context,
                                    builder: (context) => _politqueConfidentialite(),
                                  );
                                },
                                child: const Text(
                                  "la politique de confidentialit√©",
                                  style: TextStyle(
                                    fontSize: 14,
                                    color: Colors.blue,
                                    fontWeight: FontWeight.w500,
                                  ),
                                ),
                              ),
                            ),
                          ],
                        ),
                        if (formFieldState.hasError)
                          Padding(
                            padding: const EdgeInsets.only(left: 12.0),
                            child: Text(
                              formFieldState.errorText!,
                              style: const TextStyle(color: Colors.red, fontSize: 13),
                            ),
                          ),
                      ],
                    );
                  },
                ),
                const SizedBox(height: 20),
                // Bouton S'inscrire
                _isLoading
                    ?const Center(child: CircularProgressIndicator())
                    : ElevatedButton(
                    style: ElevatedButton.styleFrom(
                      backgroundColor: Colors.black87,
                      foregroundColor: Colors.white,
                      shape: RoundedRectangleBorder(
                        borderRadius: BorderRadius.circular(8), // coins arrondis
                      ),
                    ),
                  onPressed: _onSubmit,
                  child:const Text("S'inscrire"),
                ),
                const SizedBox(height:10,),
                /// OU avec s√©parateur
                const  Padding(
                  padding:  EdgeInsets.symmetric(horizontal: 18),
                  child: Row(
                    children:  [
                      Expanded(
                        child: Divider(color: Colors.black, thickness: 1),
                      ),
                      Padding(
                        padding: EdgeInsets.symmetric(horizontal: 12),
                        child: Text(
                          "OU",
                          style: TextStyle(color: Colors.black, fontSize: 14),
                        ),
                      ),
                      Expanded(
                        child: Divider(color: Colors.black, thickness: 1),
                      ),
                    ],
                  ),
                ),
                const SizedBox(height: 20),
                  Row(
                  mainAxisAlignment: MainAxisAlignment.center,
                  children:  [
                    GestureDetector(
                      onTap: () {
                        ///print("Connexion avec Google");
                      },
                      child: Column(
                        children: [
                          Image.asset(
                            "images/google.png",
                            height: 35,
                          ),
                        ],
                      ),
                    ),
                   /// Icon(Icons.g_mobiledata, color: Colors.red, size: 70),
                  const  SizedBox(width: 20),
                   const Icon(Icons.facebook, color: Colors.blue, size: 40),
                  ],
                ),
                const SizedBox(height: 20),

                /// LIEN INSCRIPTION
                Row(
                  mainAxisAlignment: MainAxisAlignment.center,
                  children: [
                    const Text("Vous avez d√©j√† un  compte ? ",style: TextStyle(fontWeight: FontWeight.bold),),
                    TextButton(
                      onPressed: () async {
                        Provider.of<UserProvider>(context, listen: false).clearUser();
                        Navigator.pushReplacement(
                          context,
                          MaterialPageRoute(builder: (context) => const Login()),
                        );
                      },
                      child: const Text(
                        "Se connecter",
                        style: TextStyle(color: Color(0xFFDFB23D) , fontWeight: FontWeight.bold),
                      ),
                    ),
                  ],
                ),
              ],
            ),
          ),
        ),
      ),
    );
  }

  Widget _buildTextField({
    required TextEditingController controller,
    required String label,
    bool obscureText = false,
    Widget? suffixIcon,
    String? Function(String?)? validator,

  }) {
    return Padding(
      padding: const EdgeInsets.symmetric(vertical: 8.0),
      child: SizedBox(
        height: 50, // Hauteur du champ de texte
        width: MediaQuery.of(context).size.width * 0.8, // Largeur de 80%
        child: TextFormField(
          controller: controller,
          obscureText: obscureText,
          decoration: InputDecoration(
            labelText: label,
            labelStyle: const TextStyle(fontSize: 12, color: Colors.black),
            enabledBorder: OutlineInputBorder(
              borderSide: const BorderSide(color: Colors.grey),
              borderRadius: BorderRadius.circular(15),
            ),
            focusedBorder: OutlineInputBorder(
              borderRadius: BorderRadius.circular(15),
              borderSide: const BorderSide(color: Colors.black),
            ),
            suffixIcon: suffixIcon,
          ),
          style: const TextStyle(fontSize: 12, color: Colors.black),
          validator: validator,
        ),
      ),
    );
  }

  Future<void> _pickImage() async {
    final ImagePicker picker = ImagePicker();
    final XFile? pickedFile = await picker.pickImage(source: ImageSource.gallery);

    if (pickedFile != null) {
      setState(() {
        _photo = File(pickedFile.path);
      });
    }
  }

  // Validation personnalis√©e pour le mot de passe
  String? validatePassword(String? value) {
    if (value == null || value.isEmpty) return 'Le mot de passe est requis';
    if (value.length < 8) return 'Le mot de passe doit contenir au moins 8 caract√®res';
    if (!RegExp(r'[A-Z]').hasMatch(value)) return 'Le mot de passe doit comporter au moins une lettre majuscule';
    if (!RegExp(r'[a-z]').hasMatch(value)) return 'Le mot de passe doit comporter au moins une lettre minuscule';
    return null;
  }


  Future<void> _onSubmit() async {
    // R√©cup√©rer le nom de domaine depuis la base de donn√©es
    final String? domainName = await dbHelper.getDomainName();

    if (_formKey.currentState!.validate()) {
      setState(() {
        _isLoading = true; // Commencer le chargement
      });

      try {
        var request = http.MultipartRequest('POST', Uri.parse('$domainName/api/signup/'));

        // Ajouter les champs de texte du formulaire
        request.fields['first_name'] = _prenomController.text;
        request.fields['last_name'] = _nomController.text;
        request.fields['username'] = _usernameController.text;
        request.fields['email'] = _emailController.text;
        request.fields['password'] = _passwordController.text;
        request.fields['confirm_password'] = _confirmpassord.text;

        // Ajouter la photo seulement si l'utilisateur en a s√©lectionn√© une
        if (_photo != null) {
          String extension = _photo!.path.split('.').last.toLowerCase();
          MediaType mediaType;

          switch (extension) {
            case 'jpg':
            case 'jpeg':
              mediaType = MediaType('image', 'jpeg');
              break;
            case 'png':
              mediaType = MediaType('image', 'png');
              break;
            case 'gif':
              mediaType = MediaType('image', 'gif');
              break;
            default:
              mediaType = MediaType('image', 'jpeg');
          }
          request.files.add(
            await http.MultipartFile.fromPath(
              'photo', // Le nom du champ sur le serveur
              _photo!.path,
              contentType: mediaType,
            ),
          );
        }
        var response = await request.send();
        var responseBody = await response.stream.bytesToString();

        if (response.statusCode == 201) {
          if (mounted) {
            Navigator.pushReplacement(
              context,
              MaterialPageRoute(builder: (context) =>const Login()), // Remplacez Login par votre page de destination
            );
            ScaffoldMessenger.of(context).showSnackBar(
              SnackBar(
                content: const Text(
                  " ‚úÖInscription r√©ussie",
                  style: TextStyle(color: Colors.white), // texte en blanc
                ),
                backgroundColor: Colors.green, // fond vert
                behavior: SnackBarBehavior.floating, // optionnel : le snack flotte au lieu d'√™tre coll√© en bas
                margin: const EdgeInsets.all(16), // optionnel : ajouter un peu de marge si flottant
                shape: RoundedRectangleBorder(
                  borderRadius: BorderRadius.circular(8), // coins arrondis
                ),
                duration: const Duration(seconds: 3), // dur√©e affichage
              ),
            );
          }
          // Envoie de l'email de connexion r√©ussie
          // R√©cup√©rer le pr√©nom et le nom de famille
          String firstName = _prenomController.text;
          String lastName = _nomController.text;
          String email = _emailController.text;

          // Appeler la fonction d'envoi d'email avec pr√©nom, nom et email
          await sendEmail(email, firstName, lastName);


          // Affiche l'email dans la console
          //print('Email de l\'utilisateur: ${_emailController.text}');

          // Vider les champs du formulaire
          _prenomController.clear();
          _nomController.clear();
          _usernameController.clear();
          _emailController.clear();
          _passwordController.clear();
          _confirmpassord.clear();
          setState(() {
            _photo = null; // R√©initialiser la photo
          });

        } else {
          if (mounted) {
            ScaffoldMessenger.of(context).showSnackBar(
              SnackBar(content: Text("Erreur lors de l'inscription: $responseBody")),
            );
          }
        }
      } catch (e) {
        if (mounted) {
          ScaffoldMessenger.of(context).showSnackBar(
            // SnackBar(content: Text("Erreur: $e")),
            const SnackBar(content: Text("Erreur")),
          );
        }
      } finally {
        if (mounted) {
          setState(() {
            _isLoading = false; // Arr√™ter le chargement
          });
        }
      }
    }
  }


  Future<void> sendEmail(String email, String firstName, String lastName) async {
    // R√©cup√©rer le nom de domaine depuis la base de donn√©es
    final String? domainName = await dbHelper.getDomainName();
    // Configuration SMTP
    String username = 'houmadifahad100@gmail.com';
    String appPassword = 'zcqhyxdiemxlihse'; // Utilisez le mot de passe d'application g√©n√©r√©

    // Utilisez Gmail SMTP
    final smtpServer = gmail(username, appPassword);
    //final imageBytes = await rootBundle.load('assets/images/judicalex.jpg');
    //final base64Image = base64Encode(imageBytes.buffer.asUint8List());

    // Chargez l'image en base64
    final base64Image = await getImageBase64();

      // Cr√©ation du message
      final message = Message()
        ..from = Address(username, 'Judicalex')
        ..recipients.add(email.trim()) // Utilise .trim() pour enlever les espaces
        //..attachments.add(FileAttachment(File('images/judicalex.jpg')))
        ..subject = 'Cr√©ation de compte r√©ussie'
        ..html = '''
          <html lang="">
            <body style="font-family: Arial, sans-serif; color: #333;">
              <!-- Banni√®re -->
              <div style=" padding: 20px; text-align: center;">
                <h1 style="color: #fff; font-size: 24px;">Bienvenue sur Judicalex</h1>
              </div>
        
              <!-- Corps du message -->
              <div style="text-align: center; margin: 20px;">
                <h2 style="color: #333;">Bonjour $firstName $lastName</h2>
                <img src="data:image/jpeg;base64,$base64Image" alt="Logo Judicalex" style="width: 100px; height: auto; margin-bottom: 10px;">
                <p style="font-size: 16px;">Nous sommes heureux de vous informer que votre compte a √©t√© cr√©√© avec succ√®s.</p>
                <p style="font-size: 16px;">Vous pouvez maintenant acc√©der √† notre application et profiter de tous les services offerts.</p>
              </div>
             <!-- Pied de page -->
            <div style="padding: 20px; text-align: center; font-size: 14px; color: #777;">
              <p>¬© 2024 Judicalex. Tous droits r√©serv√©s.</p>
              <p style="margin: 0;">
                <a href="$domainName" style="display: inline-block; padding: 12px 25px; font-size: 16px; color: #007bff; text-decoration: none; border-radius: 5px;">
                  Cliquez ici pour acc√©der √† notre site web
                </a>
              </p>
      </div>
            </body>
          </html>
        ''';

    //..text = 'Bonjour Nous sommes heureux de vous informer que votre compte a √©t√© cr√©√© avec succ√®s. Vous pouvez maintenant acc√©der √† notre application et profiter de tous les services offerts.';
    var logger = Logger();
    try {
      final sendReport = await send(message, smtpServer);
      logger.i('Email envoy√©: $sendReport');
    } on MailerException catch (e) {
      for (var p in e.problems) {
        logger.e('Probl√®me: ${p.code}: ${p.msg}');
      }
    }
  }

  Future<String> getImageBase64() async {
    final ByteData bytes = await rootBundle.load('images/banniere.png');
    final buffer = bytes.buffer;
    final base64Image = base64Encode(Uint8List.view(buffer));
    return base64Image;
  }

  Widget _politqueConfidentialite() {
    return AlertDialog(
      title: Column(
        mainAxisSize: MainAxisSize.min,
        children: [
          const Text(
            "POLITIQUE DE CONFIDENTIALIT√â ET DE PROTECTION DE VIE PRIV√âE",
            style: TextStyle(fontWeight: FontWeight.bold, fontSize: 16),
            textAlign: TextAlign.center,
          ),
          const SizedBox(height: 8),
          Container(
            height: 2,
            width: double.infinity,
            decoration: BoxDecoration(
              color: const Color(0xFFDFB23D) ,
              borderRadius: BorderRadius.circular(2),
            ),
          ),
        ],
      ),
      content: const SizedBox(
        width: double.maxFinite,
        child: SingleChildScrollView(
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Text(
                "Internet est un outil extraordinaire. Il a le pouvoir de changer la mani√®re dont nous vivons et nous constatons d√©j√† ce potentiel. Avec quelques clics de souris, vous pouvez suivre les nouvelles, acheter des biens et services et communiquer avec des internautes venant de tous les coins du monde. Il est important pour JUDICALEX d'aider nos clients √† garder leur vie priv√©e lorsqu'ils b√©n√©ficient des avantages que l'internet offre.",
              ),
              SizedBox(height: 12),
              Text(
                "Pour prot√©ger votre vie priv√©e, JUDICALEX suit diff√©rents principes en accord avec les pratiques mondiales en mati√®re de protection de la vie priv√©e et des informations des clients.",
              ),
              SizedBox(height: 8),
              Text("‚ùë Nous ne vendrons ni ne donnerons votre nom, votre adresse, votre num√©ro de t√©l√©phone, votre adresse √©lectronique, votre num√©ro de carte de cr√©dit ou quelque autre information √† aucune tierce partie."),
              Text("‚ùë Nous utiliserons des mesures de s√©curit√© modernes pour prot√©ger vos informations des utilisateurs non autoris√©s."),

              SizedBox(height: 16),
              Text(
                "INFORMATIONS PERSONNELLES",
                style: TextStyle(fontWeight: FontWeight.bold, fontSize: 16),
              ),
              SizedBox(height: 8),
              Text(
                "Nous vous demanderons si nous avons besoin d'informations qui vous identifient personnellement (informations personnelles) ou qui nous permettent de vous contacter. G√©n√©ralement, ces informations sont demand√©es lorsque vous cr√©ez un identifiant pour votre inscription sur www.judicalex-gn.org ou lorsque vous t√©l√©chargez un logiciel libre, participez √† un concours, commandez un bulletin d'information √©lectronique, ou adh√©rez √† un site privil√©gi√© √† acc√®s limit√©. Nous utilisons vos informations personnelles √† quatre (4) fins principales:",
              ),
              SizedBox(height: 8),
              Text("‚ùë rendre www.judicalex-gn.org facile √† utiliser"),
              Text("‚ùë Vous aider √† trouver plus facilement les logiciels, les services et les informations."),
              Text("‚ùë Nous aider √† cr√©er un contenu plus ad√©quat pour vous."),
              Text("‚ùë Pour vous informer des mises √† jour de produits, des offres sp√©ciales, des informations mises √† jour et des autres nouveaux services provenant de JUDICALEX."),

              SizedBox(height: 16),
              Text(
                "CONSENTEMENT",
                style: TextStyle(fontWeight: FontWeight.bold, fontSize: 16),
              ),
              SizedBox(height: 8),
              Text(
                "Vous pouvez naviguer librement sur www.judicalex-gn.org sans cr√©er de compte ni fournir d'informations personnelles. Toutefois, certaines rubriques et services (consultation d'archives, d√©cisions de justice, extraits RCCM, abonnements, newsletters sp√©cialis√©es) n√©cessitent une inscription pr√©alable.",
              ),
              SizedBox(height: 8),
              Text(
                "En vous inscrivant, vous avez la possibilit√© de choisir les types d'informations que vous souhaitez recevoir de Judicalex, notamment notre bulletin d'information juridique ou nos alertes th√©matiques. Si vous ne souhaitez pas √™tre contact√©(e) par courrier √©lectronique, postal ou t√©l√©phone concernant nos publications ou services, vous pouvez exprimer ce choix au moment de votre inscription ou √† tout moment par la suite.",
              ),
              SizedBox(height: 8),
              Text(
                "Judicalex ne transmettra jamais vos donn√©es personnelles √† des tiers √† des fins commerciales sans votre consentement expr√®s. Si vous refusez de recevoir des communications d'√©ventuels partenaires, vous pourrez l'indiquer dans vos pr√©f√©rences afin de ne recevoir que les informations √©manant directement de Judicalex.",
              ),

              SizedBox(height: 16),
              Text(
                "ACC√àS",
                style: TextStyle(fontWeight: FontWeight.bold, fontSize: 16),
              ),
              SizedBox(height: 8),
              Text(
                "Nous mettons √† votre disposition des moyens pour vous assurer de la justesse de vos informations personnelles. Vous aurez la possibilit√© de revoir et de mettre √† jour les informations √† tout moment au centre des visiteurs. √Ä cet endroit, vous avez la possibilit√© de :",
              ),
              SizedBox(height: 8),
              Text("‚ùë Voir et modifier les informations personnelles que vous nous avez d√©j√† donn√©es."),
              Text("‚ùë Nous dire si vous souhaitez que nous vous envoyions des informations marketing ou si vous souhaitez que des tierces parties vous envoient leurs offres par la poste."),
              Text("‚ùë Vous inscrire au bulletin d'information √©lectronique sur nos produits et services"),
              Text("‚ùë Vous inscrire. Une fois que vous serez inscrit, vous n'aurez plus √† nous donner vos informations. Partout o√π vous irez sur judicalex-gn.org, vos informations vous suivront."),

              SizedBox(height: 16),
              Text(
                "S√âCURIT√â",
                style: TextStyle(fontWeight: FontWeight.bold, fontSize: 16),
              ),
              SizedBox(height: 8),
              Text(
                "JUDICALEX a pris des mesures importantes pour assurer la s√©curit√© de vos informations personnelles et s'assurer que votre choix quant √† leur utilisation est respect√©. Nous prenons des dispositions ad√©quates pour prot√©ger vos donn√©es de la perte, de leur mauvaise utilisation, de l'acc√®s non autoris√© ou de la divulgation, de leur changement ou de leur destruction.",
              ),
              SizedBox(height: 8),
              Text(
                "Nous garantissons la s√©curit√© de vos op√©rations de commerce √©lectronique √† cent pour cent (100 %). Lorsque vous passez votre commande ou acc√©dez aux informations de votre compte personnel, vous utilisez un serveur s√©curis√© avec le logiciel SSL, qui crypte vos informations personnelles avant qu'elles ne soient envoy√©es par internet. SSL est l'une des technologies de cryptage les plus s√©curitaires qui existent.",
              ),
              SizedBox(height: 8),
              Text(
                "JUDICALEX prot√®ge strictement la s√©curit√© de vos informations personnelles et respecte vos choix quant √† l'utilisation qui peut en √™tre faite. Nous prot√©geons soigneusement vos donn√©es de toute perte, mauvaise utilisation, acc√®s non autoris√© ou de la divulgation, de la modification ou de la destruction.",
              ),
              SizedBox(height: 8),
              Text(
                "Vos informations personnelles ne seront jamais √©chang√©es avec les autres compagnies sans votre autorisation, sauf dans les conditions pr√©cis√©es ci-dessus. Au sein de notre compagnie, les donn√©es sont stock√©es dans un serveur prot√©g√© par un mot de passe avec un acc√®s limit√©. Vos informations peuvent √™tre stock√©es ou trait√©es en R√©publique de Guin√©e ou tout autre pays o√π JUDICALEX a ses filiales affili√©es ou agents.",
              ),
              SizedBox(height: 8),
              Text(
                "Vous avez √©galement une responsabilit√© tr√®s importante dans la protection de vos informations. Personne ne peut voir ni modifier vos informations personnelles si elle ne conna√Æt pas votre nom d'utilisateur et votre mot de passe ; alors, ne les donnez √† personne.",
              ),

              SizedBox(height: 16),
              Text(
                "APPLICATION",
                style: TextStyle(fontWeight: FontWeight.bold, fontSize: 16),
              ),
              SizedBox(height: 8),
              Text(
                "Si pour quelque raison vous pensez que www.judicalex-gn.org n'a pas adh√©r√© √† ces principes, nous vous prions de le notifier √† contact@judicalex-gn.org. Nous ferons alors de notre mieux pour d√©terminer et corriger le probl√®me aussit√¥t. N'oubliez pas de mettre 'Protection de la vie priv√©e' comme objet.",
              ),

              SizedBox(height: 16),
              Text(
                "COOKIES",
                style: TextStyle(fontWeight: FontWeight.bold, fontSize: 16),
              ),
              SizedBox(height: 8),
              Text(
                "Notre site web peut utiliser des cookies pour am√©liorer votre exp√©rience utilisateur. Vous avez la possibilit√© de configurer votre navigateur pour refuser tous les cookies ou pour vous alerter lorsqu'un cookie est envoy√©. Veuillez noter que certaines parties de notre site peuvent ne pas fonctionner correctement sans les cookies.",
              ),

              SizedBox(height: 16),
              Text(
                "ENREGISTREMENT √âLECTRONIQUE DES COMMANDES ET ABONNEMENTS",
                style: TextStyle(fontWeight: FontWeight.bold, fontSize: 16),
              ),
              SizedBox(height: 8),
              Text(
                "Lorsque vous effectuez un achat sur www.judicalex-gn.org (abonnement, consultation d'une d√©cision de justice ou d'un extrait RCCM), nous enregistrons √©lectroniquement les informations li√©es √† votre commande afin d'assurer son traitement et le suivi de vos acc√®s.",
              ),
              SizedBox(height: 8),
              Text(
                "Si vous n'avez pas encore de compte utilisateur, un profil personnel est automatiquement cr√©√© √† partir des informations fournies lors de votre premi√®re commande. Ce profil vous permet de consulter votre historique d'achats, de g√©rer vos abonnements et de mettre √† jour vos donn√©es personnelles.",
              ),
              SizedBox(height: 8),
              Text(
                "√Ä tout moment, vous pouvez acc√©der √† votre espace utilisateur pour v√©rifier, corriger ou compl√©ter vos informations personnelles, ainsi que g√©rer vos pr√©f√©rences de communication.",
              ),

              SizedBox(height: 16),
              Text(
                "PROFILS VISITEURS / ABONN√âS / CONTRIBUTEURS",
                style: TextStyle(fontWeight: FontWeight.bold, fontSize: 16),
              ),
              SizedBox(height: 8),
              Text(
                "L'acc√®s au site www.judicalex-gn.org peut se faire selon diff√©rents statuts :",
              ),
              SizedBox(height: 8),
              Text(
                "1. Visiteurs non inscris",
                style: TextStyle(fontWeight: FontWeight.bold),
              ),
              Text(
                "Tout internaute peut consulter librement les contenus gratuits mis √† disposition par Judicalex (articles d'actualit√©, br√®ves juridiques, extraits en libre acc√®s). Ces visiteurs n'ont pas besoin de cr√©er un compte.",
              ),
              SizedBox(height: 8),
              Text(
                "2. Visiteurs inscrits",
                style: TextStyle(fontWeight: FontWeight.bold),
              ),
              Text(
                "En s'inscrivant via le formulaire en ligne, l'utilisateur cr√©e un profil personnel et acc√®de √† un espace d√©di√©. Ce compte gratuit permet notamment :",
              ),
              Text("‚óè de recevoir les newsletters juridiques de Judicalex ;"),
              Text("‚óè de commenter ou r√©agir aux articles (si la fonction est activ√©e) ;"),
              Text("‚óè de g√©rer ses pr√©f√©rences de communication."),
              SizedBox(height: 8),
              Text(
                "3. Abonn√©s (comptes payants)",
                style: TextStyle(fontWeight: FontWeight.bold),
              ),
              Text(
                "Les visiteurs inscrits qui souscrivent √† un abonnement ou ach√®tent un document (d√©cision de justice, extrait RCCM, article premium) deviennent ¬´ abonn√©s ¬ª. Ils b√©n√©ficient en plus :",
              ),
              Text("‚óè d'un acc√®s illimit√© ou ponctuel aux contenus payants ;"),
              Text("‚óè de la consultation de leurs historiques d'achats et factures dans leur espace personnel ;"),
              Text("‚óè de la possibilit√© de renouveler ou modifier leur abonnement en ligne."),
              SizedBox(height: 8),
              Text(
                "4. Contributeurs",
                style: TextStyle(fontWeight: FontWeight.bold),
              ),
              Text(
                "Judicalex accueille √©galement des contributeurs (juristes, avocats, enseignants, journalistes sp√©cialis√©s, institutions, ordres professionnels, ONG et associations‚Ä¶etc.) autoris√©s √† publier du contenu. Leur compte leur permet :",
              ),
              Text("‚óè de proposer des articles, br√®ves, analyses ou commentaires pour publication, sous r√©serve du droit pour Judicalex de les retirer lorsqu'ils ne respectent pas les normes fix√©es pas Judicalex ou sur ordre de l'autorit√© comp√©tente ;"),
              Text("‚óè de g√©rer leur profil auteur (nom, fonction, biographie, photo) ;"),
              Text("‚óè d'acc√©der √† certaines statistiques li√©es √† leurs publications."),

              SizedBox(height: 16),
              Text(
                "UTILISATION DES INFORMATIONS PERSONNELLES",
                style: TextStyle(fontWeight: FontWeight.bold, fontSize: 16),
              ),
              SizedBox(height: 8),
              Text(
                "Lorsque vous vous inscrivez chez nous, vous fournissez des informations sur vos contacts, dont votre nom et votre adresse courriel. Nous utilisons ces informations pour vous envoyer des nouvelles sur vos commandes, des questionnaires pour √©valuer votre satisfaction par rapport √† nos services et des annonces sur les nouveaux services sp√©ciaux que nous offrons. Lorsque vous passez une commande chez nous, nous vous demandons votre num√©ro de carte de cr√©dit et votre adresse de facturation. Nous n'utilisons ces informations que pour facturer les produits que vous commandez √† ce moment-l√†. Nous conservons les informations sur votre facturation si jamais vous souhaitiez commander √† nouveau chez nous ; mais nous n'utiliserons pas ces informations √† nouveau sans votre autorisation.",
              ),

              SizedBox(height: 16),
              Text(
                "DIVULGATION DES INFORMATIONS",
                style: TextStyle(fontWeight: FontWeight.bold, fontSize: 16),
              ),
              SizedBox(height: 8),
              Text(
                "Nous ne vendons, n'√©changeons ou ne louons pas vos informations personnelles √† des tiers, sauf si nous obtenons votre consentement ou si la loi l'exige. Cependant, nous pouvons partager vos informations avec des fournisseurs de services tiers qui nous aident √† exploiter notre site web ou √† mener nos activit√©s, sous r√©serve de clauses de confidentialit√©.",
              ),
              SizedBox(height: 8),
              Text(
                "Judicalex peut divulguer vos informations, sans pr√©avis, si de bonne foi, elle juge un tel acte n√©cessaire pour prot√©ger et d√©fendre ses droits ou la propri√©t√© de Judicalex et sa famille de site internet et agir dans une circonstance d'urgence pour assurer la s√©curit√© personnelle de ses visiteurs, de ses sites et du public.",
              ),

              SizedBox(height: 16),
              Text(
                "CONTACT",
                style: TextStyle(fontWeight: FontWeight.bold, fontSize: 16),
              ),
              SizedBox(height: 8),
              Text(
                "Si vous avez des questions concernant cette politique de confidentialit√© et de la protection de la vie priv√©e, veuillez nous contacter √† contact@judicalex.com",
              ),
            ],
          ),
        ),
      ),
      actions: [
        TextButton(
          onPressed: () => Navigator.of(context).pop(),
          child: const Text("Fermer"),
        ),
      ],
    );
  }

  Widget _conditionsUtilisation() {
    return AlertDialog(
      title: Column(
        mainAxisSize: MainAxisSize.min,
        children: [
          const Text(
            "CONDITIONS G√âN√âRALES D'UTILISATION",
            style: TextStyle(fontWeight: FontWeight.bold, fontSize: 16),
            textAlign: TextAlign.center,
          ),
          const SizedBox(height: 8),
          Container(
            height: 2,
            width:double.infinity,
            decoration: BoxDecoration(
              color: const Color(0xFFDFB23D) ,
              borderRadius: BorderRadius.circular(2),
            ),
          ),
        ],
      ),
      content: SizedBox(
        width: double.maxFinite,
        child: SingleChildScrollView(
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              const  Text(
                "Bienvenue sur le site www.judicalex-gn.org (¬´ le Site ¬ª). Veuillez lire attentivement ces Conditions G√©n√©rales d'Utilisation (¬´ Conditions ¬ª) avant d'acc√©der au Site ou d'utiliser nos services.",
              ),
              const  SizedBox(height: 8),
              const Text(
                "En acc√©dant ou en utilisant le Site, vous reconnaissez avoir pris connaissance des pr√©sentes Conditions et acceptez d'y √™tre li√©. Si vous n'acceptez pas ces Conditions, nous vous invitons √† ne pas utiliser le Site.",
              ),

              const  SizedBox(height: 16),
              const  Text(
                "1. Utilisation du Site",
                style: TextStyle(fontWeight: FontWeight.bold, fontSize: 14),
              ),
              const  SizedBox(height: 8),
              const  Text(
                "1.1. Vous acceptez de fournir des informations exactes, compl√®tes et √† jour lors de votre utilisation du Site.",
              ),
              const  SizedBox(height: 4),
              const  Text(
                "1.2. Vous √™tes responsable de la confidentialit√© de votre compte et de votre mot de passe, ainsi que des activit√©s qui se produisent sous votre compte. Vous acceptez de nous informer imm√©diatement de toute utilisation non autoris√©e de votre compte.",
              ),

              const  SizedBox(height: 16),
              const  Text(
                "2. Propri√©t√© Intellectuelle",
                style: TextStyle(fontWeight: FontWeight.bold, fontSize: 14),
              ),
              const  SizedBox(height: 8),
              const  Text(
                "2.1. Le contenu du Site, y compris, mais sans s'y limiter, le texte, les graphiques, les images, les vid√©os, les logos et les logiciels, est la propri√©t√© de Judicalex Sarlu et est prot√©g√© par des droits d'auteur et d'autres lois.",
              ),
              const  SizedBox(height: 4),
              const  Text(
                "2.2. Vous ne pouvez pas modifier, copier, distribuer, transmettre, afficher, ex√©cuter, reproduire, publier, autoriser, cr√©er des ≈ìuvres d√©riv√©es, transf√©rer ou vendre toute information, logiciel, produit ou service obtenus √† partir de ce Site.",
              ),

              const SizedBox(height: 16),
              const  Text(
                "3. Limitation de Responsabilit√©",
                style: TextStyle(fontWeight: FontWeight.bold, fontSize: 14),
              ),
              const  SizedBox(height: 8),
              const  Text(
                "3.1. judicalex-gn.org ne sera en aucun cas responsable de tout dommage direct, indirect, accessoire, sp√©cial, cons√©cutif ou punitif r√©sultant de votre acc√®s, utilisation ou incapacit√© √† utiliser ce Site.",
              ),

              const SizedBox(height: 16),
              const  Text(
                "4. Modifications des Conditions",
                style: TextStyle(fontWeight: FontWeight.bold, fontSize: 14),
              ),
              const SizedBox(height: 8),
              const  Text(
                "judicalex-gn.org se r√©serve le droit de modifier ces Conditions √† tout moment. Les modifications entrent en vigueur d√®s leur publication sur le Site. En continuant √† utiliser le Site apr√®s de telles modifications, vous acceptez d'√™tre li√© par les Conditions modifi√©es.",
              ),

              const SizedBox(height: 16),
              const Text(
                "5. R√©siliation ‚Äì Interruption du Service",
                style: TextStyle(fontWeight: FontWeight.bold, fontSize: 14),
              ),
              const SizedBox(height: 8),
              const Text(
                "5.1. La Soci√©t√© se r√©serve le droit d'interrompre le Service du Client si celui-ci constitue un danger pour la s√©curit√© de la plate-forme (piratage, faille de s√©curit√©, usage non conforme aux Conditions).",
              ),
              const SizedBox(height: 4),
              const Text(
                "5.2. judicalex-gn.org supprime les comptes inactifs dans les cas suivants : absence de connexion du Client √† son compte pendant une dur√©e d'une (01) ann√©e.",
              ),

              const SizedBox(height: 16),
              const Text(
                "6. Divers",
                style: TextStyle(fontWeight: FontWeight.bold, fontSize: 14),
              ),
              const SizedBox(height: 8),
              const Text(
                "6.1. Si une stipulation des Conditions devient ill√©gale ou inapplicable, cela n'affectera pas la validit√© des autres stipulations.",
              ),

              const SizedBox(height: 16),
              const Text(
                "7. R√©f√©rences",
                style: TextStyle(fontWeight: FontWeight.bold, fontSize: 14),
              ),
              const SizedBox(height: 8),
              const Text(
                "7.1. Le Client accepte de figurer sur la liste des r√©f√©rences clients de judicalex-gn.org (raison sociale et logos correspondants).",
              ),

              const  SizedBox(height: 16),
              const  Text(
                "8. Force Majeure",
                style: TextStyle(fontWeight: FontWeight.bold, fontSize: 14),
              ),
              const SizedBox(height: 8),
              const Text(
                "8.1. judicalex-gn.org ne peut √™tre tenue pour responsable de l'inex√©cution des Services en cas de force majeure telle que d√©finie par l'article 1104 du Code civil guin√©en.",
              ),

              const SizedBox(height: 16),
              const Text(
                "9. Droit Applicable",
                style: TextStyle(fontWeight: FontWeight.bold, fontSize: 14),
              ),
              const SizedBox(height: 8),
              const Text(
                "9.1. Tout litige relatif aux Conditions sera soumis au droit guin√©en.",
              ),

              const SizedBox(height: 16),
             const Text(
                "10. R√®glement des diff√©rends",
                style: TextStyle(fontWeight: FontWeight.bold, fontSize: 14),
              ),
             const SizedBox(height: 8),
             const  Text(
                "10.1. En cas de litige, la partie l√©s√©e doit notifier l'autre partie par √©crit. Les parties tenteront de r√©soudre le diff√©rend dans un d√©lai d'un (1) mois. Pass√© ce d√©lai, le litige pourra √™tre soumis aux juridictions comp√©tentes du ressort de la Cour d'appel de Conakry.",
              ),

              const SizedBox(height: 16),
              const Text(
                "11. Convention de Preuve",
                style: TextStyle(fontWeight: FontWeight.bold, fontSize: 14),
              ),
            const SizedBox(height: 8),
             const Text(
                "11.1. Tous les documents et correspondances √©chang√©s √©lectroniquement entre les parties lient les parties, y compris la signature num√©rique des pr√©sentes Conditions.",
              ),

             const SizedBox(height: 16),
              Wrap(
                crossAxisAlignment: WrapCrossAlignment.center,
                children: [
                  const Text(
                    "Pour toute question concernant ces Conditions, veuillez nous contacter √† ",
                    style: TextStyle(fontStyle: FontStyle.italic),
                  ),
                  GestureDetector(
                    onTap: () {
                      final Uri emailLaunchUri = Uri(
                        scheme: 'mailto',
                        path: 'contact@judicalex-gn.org',
                      );
                      launchUrl(emailLaunchUri);
                    },
                    child: const Text(
                      "contact@judicalex-gn.org",
                      style: TextStyle(
                        color: Color(0xFFDFB23D) ,
                        fontWeight: FontWeight.bold,
                      ),
                    ),
                  ),
                  const Text(
                    ".",
                    style: TextStyle(fontStyle: FontStyle.italic),
                  ),
                ],
              ),
            ],
          ),
        ),
      ),
      actions: [
        TextButton(
          onPressed: () => Navigator.of(context).pop(),
          child: const Text("Fermer"),
        ),
      ],
    );
  }

}

